[tool.poetry]
name = "cot_faithfulness"
version = "0.1.0"
description = "cot"
authors = ["Marcin Korcz", "Andrii Chmutov", "Vasyl Korzavatykh", "Mateusz Idziejczak", "Mateusz Stawicki"]
readme = "README.md"
package-mode = true
packages = [
    { include = "cot_faithfulness", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.11"
matplotlib = "^3.10.1"
networkx = "^3.4.2"
pandas = "^2.2.3"
plotly = "^6.0.0"
scikit-learn = "^1.6.1"
seaborn = "^0.13.2"
tiktoken = "^0.9.0"
wordcloud = "^1.9.4"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-mock = "^3.14.0"


[tool.pdm.build]
includes = ["src/cot_faithfulness"]
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
main = "scripts.main:main"
tournament = "scripts.tournament:main"

[tool.ruff]
preview = true

[tool.ruff.lint]
select = [
    "ANN001",   # Missing type annotation for function argument
    "DOC",      # Pydoclint
    "D",        # Pydocstyle
    "E",        # Pycodestyle
    "F",        # Pyflakes
    "I",        # Isort
    "Q",        # Quotes
]

ignore = [
    "D1",       # Missing docstrings
    "D205",
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"

[project]
authors = []
requires-python = "<4.0,>=3.11"
dependencies = [
    "matplotlib>=3.10.1",
    "networkx>=3.4.2",
    "pandas>=2.2.3",
    "plotly>=6.0.0",
    "scikit-learn>=1.6.1",
    "seaborn>=0.13.2",
    "tiktoken>=0.9.0",
    "wordcloud>=1.9.4",
]
name = "cot_faithfulness"
version = "0.1.0"
description = "cot"
readme = "README.md"
package-mode = true

[project.scripts]
main = "scripts.main:main"
tournament = "scripts.tournament:main"

[dependency-groups]
dev = [
    "pytest<9.0.0,>=8.3.3",
    "pytest-mock<4.0.0,>=3.14.0",
]
